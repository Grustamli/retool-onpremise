services:
  api:
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      DEPLOYMENT_TEMPLATE_TYPE: docker-compose
      SERVICE_TYPE: MAIN_BACKEND,DB_CONNECTOR,DB_SSH_CONNECTOR
      DBCONNECTOR_POSTGRES_POOL_MAX_SIZE: 100
      DBCONNECTOR_QUERY_TIMEOUT_MS: 120000
      WORKFLOW_BACKEND_HOST: http://workflows-backend:3000
      CODE_EXECUTOR_INGRESS_DOMAIN: http://code-executor:3004
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_DB: hammerhead_production
      POSTGRES_USER: retool_internal_user
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      RETOOLDB_POSTGRES_DB: postgres
      RETOOLDB_POSTGRES_USER: root
      RETOOLDB_POSTGRES_HOST: retooldb-postgres
      RETOOLDB_POSTGRES_PORT: 5432
      RETOOLDB_POSTGRES_PASSWORD: ${RETOOLDB_POSTGRES_PASSWORD}
      DOMAINS: ${HOSTNAME} -> http://api:3000
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      LICENSE_KEY: EXPIRED-LICENSE-KEY-TRIAL
    networks:
      - frontend-network
      - backend-network
      - code-executor-network
    depends_on:
      - postgres
      - retooldb-postgres
      - jobs-runner
      - workflows-worker
      - code-executor
    command: bash -c "./docker_scripts/wait-for-it.sh postgres:5432; ./docker_scripts/start_api.sh"
    ports:
      - "3000:3000"
    restart: on-failure
    volumes:
      - ./keys:/root/.ssh
      - ./keys:/retool_backend/keys
      - ssh:/retool_backend/autogen_ssh_keys
      - ./retool:/usr/local/retool-git-repo
      - ./retool:/usr/local/retool-repo

  jobs-runner:
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      DEPLOYMENT_TEMPLATE_TYPE: docker-compose
      SERVICE_TYPE: JOBS_RUNNER
    networks:
      - backend-network
    depends_on:
      - postgres
    command: bash -c "chmod -R +x ./docker_scripts; sync; ./docker_scripts/wait-for-it.sh postgres:5432; ./docker_scripts/start_api.sh"
    volumes:
      - ./keys:/root/.ssh

  workflows-worker:
    build:
      context: ./
      dockerfile: Dockerfile
    command: bash -c "./docker_scripts/wait-for-it.sh postgres:5432; ./docker_scripts/start_api.sh"
    environment:
      DEPLOYMENT_TEMPLATE_TYPE: docker-compose
      SERVICE_TYPE: WORKFLOW_TEMPORAL_WORKER
      NODE_OPTIONS: --max_old_space_size=1024
      DISABLE_DATABASE_MIGRATIONS: true
      WORKFLOW_BACKEND_HOST: http://workflows-backend:3000
      CODE_EXECUTOR_INGRESS_DOMAIN: http://code-executor:3004
    networks:
      - backend-network
      - code-executor-network
    restart: on-failure

  workflows-backend:
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      DEPLOYMENT_TEMPLATE_TYPE: docker-compose
      SERVICE_TYPE: WORKFLOW_BACKEND,DB_CONNECTOR,DB_SSH_CONNECTOR
      WORKFLOW_BACKEND_HOST: http://workflows-backend:3000
      CODE_EXECUTOR_INGRESS_DOMAIN: http://code-executor:3004
      DBCONNECTOR_POSTGRES_POOL_MAX_SIZE: 100
      DBCONNECTOR_QUERY_TIMEOUT_MS: 120000
    networks:
      - backend-network
      - code-executor-network
    depends_on:
      - postgres
      - retooldb-postgres
      - workflows-worker
      - code-executor
    command: bash -c "./docker_scripts/wait-for-it.sh postgres:5432; ./docker_scripts/start_api.sh"
    restart: on-failure
    volumes:
      - ./keys:/root/.ssh
      - ./keys:/retool_backend/keys
      - ssh:/retool_backend/autogen_ssh_keys
      - ./retool:/usr/local/retool-git-repo
      - ./retool:/usr/local/retool-repo

  code-executor:
    build:
      context: ./
      dockerfile: CodeExecutor.Dockerfile
    command: bash -c "./start.sh"
    environment:
      DEPLOYMENT_TEMPLATE_TYPE: docker-compose
      NODE_OPTIONS: --max_old_space_size=1024
    networks:
      - code-executor-network
    privileged: true
    restart: on-failure

  postgres:
    image: "postgres:11.13"
    environment:
      POSTGRES_DB: hammerhead_production
      POSTGRES_USER: retool_internal_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - backend-network
    volumes:
      - data:/var/lib/postgresql/data

  retooldb-postgres:
    image: "postgres:14.3"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD: ${RETOOLDB_POSTGRES_PASSWORD}
    networks:
      - backend-network
    volumes:
      - retooldb-data:/var/lib/postgresql/data

  https-portal:
    image: tryretool/https-portal:latest
    ports:
      - "8081:80"
      - "8443:443"
    links:
      - api
    restart: always
    environment:
      STAGE: "local"
      CLIENT_MAX_BODY_SIZE: 40M
      KEEPALIVE_TIMEOUT: 605
      PROXY_CONNECT_TIMEOUT: 600
      PROXY_SEND_TIMEOUT: 600
      PROXY_READ_TIMEOUT: 600
    networks:
      - frontend-network

networks:
  frontend-network:
  backend-network:
  code-executor-network:

volumes:
  ssh:
  data:
  retooldb-data:
